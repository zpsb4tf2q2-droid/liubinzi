name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  NEXT_TELEMETRY_DISABLED: '1'
  CI: 'true'

jobs:
  build_test:
    name: Lint, Typecheck, Unit tests, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.12.2
          run_install: false

      - name: Determine pnpm store path
        id: pnpm-store
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-node20-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-node20-
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      - name: Prisma generate (postinstall safety)
        run: pnpm prisma:generate || true

      - name: Lint (skipped if not configured)
        if: ${{ hashFiles('.eslintrc*', '**/.eslintrc*') != '' }}
        run: pnpm exec eslint .

      - name: Typecheck
        run: pnpm exec tsc -p tsconfig.json --noEmit

      - name: Unit tests
        run: pnpm test:unit

      - name: Build
        run: pnpm build

  e2e:
    name: Playwright E2E (with PostgreSQL)
    runs-on: ubuntu-latest
    needs: build_test
    continue-on-error: true

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d postgres" \
          --health-interval 5s \
          --health-timeout 5s \
          --health-retries 10

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres?schema=public

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.12.2
          run_install: false

      - name: Determine pnpm store path
        id: pnpm-store
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-node20-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-node20-
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      - name: Generate Prisma Client
        run: pnpm prisma:generate || true

      - name: Prepare database (migrate/push + seed)
        run: |
          pnpm prisma:push || true
          pnpm prisma:seed || true

      - name: Install Playwright browsers and deps
        run: pnpm exec playwright install --with-deps

      - name: Run E2E tests
        run: pnpm test:e2e:ci
