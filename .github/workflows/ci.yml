name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_ENV: test
  DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://postgres:postgres@127.0.0.1:5432/app' }}
  NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL || 'http://127.0.0.1:3000' }}

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

      - name: Run lint
        run: pnpm run lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

      - name: Run typecheck
        run: pnpm run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs:
      - lint
      - typecheck
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

      - name: Run unit tests
        run: pnpm run test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - typecheck
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

      - name: Build application
        run: pnpm run build

  e2e:
    name: Playwright E2E
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - build
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: app
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: pnpm install --no-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        env:
          BASE_URL: http://127.0.0.1:3000
        run: pnpm run test:e2e
