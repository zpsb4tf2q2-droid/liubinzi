services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: project-api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-4000}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/project?schema=public}
      AUTH_JWT_SECRET: ${AUTH_JWT_SECRET:-super-secret-key}
      SESSION_HEADER_NAME: ${SESSION_HEADER_NAME:-x-session-token}
    ports:
      - "4000:4000"
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: project-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-project}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
