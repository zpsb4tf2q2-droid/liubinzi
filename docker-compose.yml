services:
  db:
    image: postgres:16-alpine
    container_name: project-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-project}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: project-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: hardware-control-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      FASTAPI_DATABASE_URL: ${FASTAPI_DATABASE_URL:-postgresql+psycopg://postgres:postgres@db:5432/project}
      FASTAPI_REDIS_URL: ${FASTAPI_REDIS_URL:-redis://redis:6379/0}
      FASTAPI_SERVICE_API_KEYS: ${FASTAPI_SERVICE_API_KEYS:-internal-service-key}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

volumes:
  postgres-data:
