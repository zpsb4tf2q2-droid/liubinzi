services:
  db:
    image: postgres:16-alpine
    container_name: project-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-project}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - project

  api:
    image: node:20
    container_name: project-api
    restart: unless-stopped
    working_dir: /app
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-4000}
      PORT: ${API_PORT:-4000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-project}?schema=${POSTGRES_SCHEMA:-public}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA:-public}
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT:-4000}:${API_PORT:-4000}"
    command: >-
      sh -c "corepack enable pnpm &&
      node ./scripts/wait-for-db.mjs db 5432 &&
      pnpm dev:api"
    volumes:
      - ./:/app
    networks:
      - project

  web:
    image: node:20
    container_name: project-web
    restart: unless-stopped
    working_dir: /app
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
      HOST: ${WEB_HOST:-0.0.0.0}
      PORT: ${WEB_PORT:-3000}
      NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED:-1}
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://localhost:4000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-project}?schema=${POSTGRES_SCHEMA:-public}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA:-public}
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    ports:
      - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
    command: >-
      sh -c "corepack enable pnpm &&
      node ./scripts/wait-for-db.mjs db 5432 &&
      pnpm dev"
    volumes:
      - ./:/app
    networks:
      - project

volumes:
  postgres-data:

networks:
  project:
    driver: bridge
