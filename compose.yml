version: "3.9"

services:
  app:
    profiles:
      - dev
    build:
      context: .
      target: dev
    command: pnpm dev
    env_file:
      - .env
    environment:
      NEXT_TELEMETRY_DISABLED: "1"
      DATABASE_URL: postgresql://postgres:postgres@db:5432/next_app?schema=public
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./:/app
      - app-node-modules:/app/node_modules
      - app-next-cache:/app/.next
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 30s
    restart: unless-stopped

  app-prod:
    profiles:
      - prod
    build:
      context: .
      target: runner
    env_file:
      - .env
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
      DATABASE_URL: postgresql://postgres:postgres@db:5432/next_app?schema=public
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 30s
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    profiles:
      - dev
      - prod
    container_name: next-app-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-next_app}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB:-next_app} -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres-data:
  app-node-modules:
  app-next-cache:
